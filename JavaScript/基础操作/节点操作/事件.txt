
事件流:
	触发了某个元素等于触发了元素的容器.
	描述的是从页面中接收事件的顺序.
冒泡:
	事件开始由最具体的元素接收,逐级向上传递到最上不具体的元素
捕获:
	不太具体的节点应该更早接收到事件,而最不具体的节点应最后接收到事件.
	
事件处理程序:
	html事件:将事件写到html中.如
		<input type='button' value='按钮' onclink='alert("hello")'/>
			或者
		<input type='button' value='按钮' onclink='say()'/>
		<script> function say(){ alert('hello'); } <script>
	
	Dom0级事件处理程序:把一个函数赋值给一个事件处理程序的属性
		<input id='btn' type='button' value='按钮' onclink='say()'/>
		<script> 
			var btn = document.getElementById('btn');
			btn.onclick = function(){alert('hello');}
			btn.onclick = null;								//删除事件
		<script>
	
	Dom2级事件处理程序:处理指定和删除事件处理程序的操作
			参数:要处理的事件名,作为处理程序的函数,布尔值(true:捕获阶段调用,false:冒泡阶段调用)
		<input id='btn' type='button' value='按钮' onclink='say()'/>
		<script> 
			var btn = document.getElementById('btn'); 
			btn.addEventListener('click',say,false);		//添加事件
			function say(){ alert('hello'); } 
			btn.removeEventListener('click',say,false);		//删除事件
		<script>
	注意:
		IE中使用attachEvent()和detachEvent()完成对事件的监听和删除
		
	能力检测:对每个事件是否可以执行进行检测,如果可以则执行,否则向下兼容
	
this:引用事件触发最初对象.代表了触发对象本身

事件对象
	在触发Dom事件时的对象
	